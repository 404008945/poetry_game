<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.CommentForPoetryDao">
  <resultMap id="BaseResultMap" type="com.poetry.entity.CommentForPoetry">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="poetry_id" jdbcType="INTEGER" property="poetryId" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, poetry_id, likes, user_id, time
  </sql>
  
  <select id="selectByPoetryId" parameterType="java.lang.Integer"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from commentforpoetry
    where poetry_id = #{id}

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commentforpoetry
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCommentsNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  SELECT count(*)
  FROM `commentforpoetry`
  where poetry_id=#{poetryId};
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commentforpoetry
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.poetry.entity.CommentForPoetry">
    insert into commentforpoetry (id, content, poetry_id,
      likes, user_id, time
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{poetryId,jdbcType=INTEGER},
      #{likes,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.poetry.entity.CommentForPoetry">
    insert into commentforpoetry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="poetryId != null">
        poetry_id,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="poetryId != null">
        #{poetryId,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poetry.entity.CommentForPoetry">
    update commentforpoetry
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="poetryId != null">
        poetry_id = #{poetryId,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poetry.entity.CommentForPoetry">
    update commentforpoetry
    set content = #{content,jdbcType=VARCHAR},
      poetry_id = #{poetryId,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>