<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.MessageDao">
  <resultMap id="BaseResultMap" type="com.poetry.entity.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="read" jdbcType="INTEGER" property="read" />
    <result column="time" property="time"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `message`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.poetry.entity.Message" useGeneratedKeys="true">
    insert into `message` (from_id, to_id, info, 
      `read`,`time`)
    values (#{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR}, 
      #{read,jdbcType=INTEGER},#{time})
  </insert>

  <select id="selectByUserIdN" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, from_id, to_id, info, `read`,`time`
    from `message`
    where to_id = #{id,jdbcType=INTEGER} and `read`=0
    order by `time` desc;
  </select>

  <select id="selectByUserIdY" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, from_id, to_id, info, `read`,`time`
    from `message`
    where to_id = #{id,jdbcType=INTEGER} and `read`=1
    order by `time` desc;
  </select>

  <select id="selectUnreadNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(id)
    from `message`
    where to_id = #{id,jdbcType=INTEGER} and `read`=0;
  </select>

  <update id="setRead" parameterType="java.lang.Integer">
    update message
    set `read`=1
    where to_id=#{id};
  </update>
</mapper>