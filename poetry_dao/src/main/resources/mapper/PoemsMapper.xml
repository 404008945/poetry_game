<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.PoemsDao">
  <resultMap id="BaseResultMap" type="com.poetry.entity.Poems">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, author_id, title, author, content
    from `poems`
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByTitle" resultMap="BaseResultMap">
    select id, author_id, title, author, content
    from `poems`
    where title = #{title,jdbcType=INTEGER}
  </select>

  <select id="selectByAuthor" resultMap="BaseResultMap">
    select id, author_id, title, author, content
    from `poems`
    where author = #{author,jdbcType=INTEGER}
  </select>

  <select id="selectByRandom" resultMap="BaseResultMap">
    select id, author_id, title, content,author
    from `poems`
    order by rand() limit 6;
  </select>

  <select id="selectByContent" resultMap="BaseResultMap">
    select id, author_id, title, author, content
    from `poems`
    <where>
      <if test="content!=null">
        <bind name="pattern" value="'%' +content + '%'" />
        and (content LIKE #{pattern} or title like #{pattern})
      </if>
    </where>
  </select>
</mapper>