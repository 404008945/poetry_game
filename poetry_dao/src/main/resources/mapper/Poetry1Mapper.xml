<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.Poetry1Dao">
    <resultMap id="BaseResultMap" type="com.poetry.entity.Poetry1">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="dynasty" jdbcType="CHAR" property="dynasty"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="yunlv_rule" jdbcType="LONGVARCHAR" property="yunlvRule"/>
    </resultMap>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, author_id, title, author, dynasty, content, yunlv_rule,info_id,likes
    from `poetry1`
    where id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectByChar" parameterType="com.poetry.entity.HeadPoetry" resultMap="BaseResultMap">
        select id,content
        from poetry1
        where ((content like concat(#{headPoetry.character},'%'))
        or content like concat('%,',#{headPoetry.character},'%')
        or content like concat('%|',#{headPoetry.character},'%')
        )
        <if test="headPoetry.type==1">
            <!--五言-->
            and CHAR_LENGTH(content)=51
        </if>
        <if test="headPoetry.type==2">
            <!--七言-->
            and CHAR_LENGTH(content)=67
        </if>
        and (length(content)-length(replace(content,'|',''))=3) and(find=0)
        limit 1
    </select>

    <update id="updateFind" parameterType="java.lang.Integer">
        update poetry1
        set find=#{num}
        where id=#{id}
    </update>
</mapper>